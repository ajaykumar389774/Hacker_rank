NOTE :1) MATH.pow();
 2) String.valueof(datatype) - IT is nothing used to convert any datatype to String Representation
3) "%-15s%03d%n" - TO Give Width Between String and Integer



1.Java Stdin and Stdout II

import java.util.Scanner;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int i = sc.nextInt();
        double d = sc.nextDouble();
        String s = sc.nextLine();
        s=sc.nextLine();
        sc.close();

        System.out.println("String: " + s);
        System.out.println("Double: " + d);
        System.out.println("Int: " + i);
    }
}

Sample Input

42
3.1415
Welcome to HackerRank's Java tutorials!
Sample Output

String: Welcome to HackerRank's Java tutorials!
Double: 3.1415
Int: 42
--------------------------------------------------------------------------------------------------------------------------------------------------

2 . Java Loops II

(a + 2^0 . b),(a + 2^0.b + 2^1.b),.....(a+2^0.b + 2^1.b....  + 2^n-1.b)

import java.util.*;
import java.io.*;

class Solution{
    public static void main(String []argh){
        Scanner in = new Scanner(System.in);
        int t=in.nextInt();
        for(int i=0;i<t;i++){
            int a = in.nextInt();
            int b = in.nextInt();
            int n = in.nextInt();
            
            int sum = a + b;
            System.out.print(sum+" ");
            for(int j=1; j<n ;j++)
            {
                sum+=Math.pow(2, j) * b;
                System.out.print(sum+" ");
            }
            
            System.out.println();
            
            }
           in.close();
           }
          }

Sample Input

2
0 2 10
5 3 5
Sample Output

2 6 14 30 62 126 254 510 1022 2046
8 14 26 50 98
--------------------------------------------------------------------------------------------------------------------------------------------------

3. Java Datatypes

import java.util.*;
import java.io.*;

Formula : -2^n-1 to 2^n-1-1

class Solution{
    public static void main(String []argh)
    {



        Scanner sc = new Scanner(System.in);
        int t=sc.nextInt();

        for(int i=0;i<t;i++)
        {

            try
            {
                long x=sc.nextLong();
                System.out.println(x+" can be fitted in:");
                if(x>=-Math.pow(2, 7) && x<=Math.pow(2,7)-1){
                System.out.println("* byte");
                }
                if(x>=-Math.pow(2, 15) && x<=Math.pow(2,15)-1){
                System.out.println("* short");
                }
                if(x>=-Math.pow(2, 31) && x<=Math.pow(2,31)-1){
                System.out.println("* int");
                }
                if(x>=-Math.pow(2, 63) && x<=Math.pow(2,63)-1){
                System.out.println("* long");
                }
                
            }
            catch(Exception e)
            {
                System.out.println(sc.next()+" can't be fitted anywhere.");
            }

        }
    }
}

Sample Input

5
-150
150000
1500000000
213333333333333333333333333333333333
-100000000000000
Sample Output

-150 can be fitted in:
* short
* int
* long
150000 can be fitted in:
* int
* long
1500000000 can be fitted in:
* int
* long
213333333333333333333333333333333333 can't be fitted anywhere.
-100000000000000 can be fitted in:
* long


--------------------------------------------------------------------------------------------------------------------------------------------------



4. Java End-of-file

"In computing, End Of File (commonly abbreviated EOF) is a condition in a computer operating system where no more data can be read from a data source.

import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        int count=1;
        
        while(sc.hasNext())
        {
            System.out.println(count++ + " " + sc.nextLine());
        }
        
    }
}

Sample Input

Hello world
I am a file
Read me until end-of-file.
Sample Output

1 Hello world
2 I am a file
3 Read me until end-of-file.


--------------------------------------------------------------------------------------------------------------------------------------------------

5. Java Static Initializer Block

import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {


static int B = 0;
static int H = 0;
static boolean flag = false;

static {
    Scanner sc = new Scanner(System.in);
    B=sc.nextInt();
    H=sc.nextInt();
    
    if(B>0&&H>0)
    {
        flag=true;
    }
    else
    {
        System.out.println("java.lang.Exception: Breadth and height must be positive");
    }
    
}



public static void main(String[] args){
		if(flag){
			int area=B*H;
			System.out.print(area);
		}
		
	}
}

Sample input 1

1
3
Sample output 1

3
Sample input 2

-1
2
Sample output 2

java.lang.Exception: Breadth and height must be positive

--------------------------------------------------------------------------------------------------------------------------------------------------



6. Java Currency Formatter

import java.util.*;
import java.text.*;

public class Solution {
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        double payment = scanner.nextDouble();
        scanner.close();
        
        NumberFormat n = NumberFormat.getCurrencyInstance(Locale.US);
        String us =n.format(payment);
        
        Locale indiaLocale = new Locale("en","IN"); 
        n = NumberFormat.getCurrencyInstance(indiaLocale);
        String india =n.format(payment);

        n = NumberFormat.getCurrencyInstance(Locale.CHINA);
        String china =n.format(payment);

        n = NumberFormat.getCurrencyInstance(Locale.FRANCE);
        String france =n.format(payment);

        
        System.out.println("US: " + us);
        System.out.println("India: " + india);
        System.out.println("China: " + china);
        System.out.println("France: " + france);
    }
}

Sample Input

12324.134
Sample Output

US: $12,324.13
India: Rs.12,324.13
China: ￥12,324.13
France: 12 324,13 €

--------------------------------------------------------------------------------------------------------------------------------------------------
7 . Java Date and Time

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;



import java.util.Calendar;

public class Solution {
    public static String findDay(int month, int day, int year) {
        Calendar c = Calendar.getInstance();
        
        c.set(year, month - 1, day);
        
        int dayOfWeek = c.get(Calendar.DAY_OF_WEEK);
        
        String[] daysOfWeek = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
        
        
        return daysOfWeek[dayOfWeek - 1];
    }

    public static void main(String[] args) {
    	
    	Scanner sc = new Scanner(System.in);
    	int month = sc.nextInt();
    	int day = sc.nextInt();
    	int year = sc.nextInt();
    	
    	System.out.println(month + " " + day + " " + year);
        
        System.out.println(findDay(month, day, year));  // Output: "Thursday"
    }
}

Sample Input

08 05 2015
Sample Output

WEDNESDAY

--------------------------------------------------------------------------------------------------------------------------------------------------





